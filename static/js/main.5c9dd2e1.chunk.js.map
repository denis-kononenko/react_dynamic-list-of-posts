{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","utils/fetchClient.ts","components/PostDetails.tsx","utils/apiRequests.ts","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","setOpenSidebar","selectedPost","setSelectedPost","loadComments","handleCloseClick","className","map","post","id","title","type","onClick","handleOpenClick","Loader","NewCommentForm","onAdd","useState","name","email","body","fields","setFields","fieldsErrors","setFieldsErrors","isCommentPosting","setIsCommentPosting","handleFieldsChange","event","target","value","checkFields","trimmedFields","key","prevErrors","prevFields","onSubmit","e","preventDefault","trim","then","finally","addComment","htmlFor","placeholder","classNames","onChange","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","fetch","response","ok","Error","json","client","PostDetails","comments","setComments","areCommentsLoading","hasCommentsLoadingError","setHasCommentsLoadingError","showForm","setShowForm","deleteComment","postId","filter","comment","catch","length","href","addingCommentRequest","result","UserSelector","isListOpen","setIsListOpen","users","selectedUser","setSelectedUser","loadPosts","stopPropagation","role","user","handleItemClick","App","setUsers","setPosts","arePostsLoading","setArePostsLoading","hasPostsLoadingError","setHasPostsLoadingError","isSidebarOpen","setIsSidebarOpen","setAreCommentsLoading","arePostsShown","useEffect","document","addEventListener","userId","ReactDOM","render","getElementById"],"mappings":"+QAUaA,EAA6B,SAAC,GAMpC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAQMC,EAAmB,WACvBJ,GAAe,GACfE,EAAgB,OAGlB,OACE,sBAAK,UAAQ,YAAb,UACE,mBAAGG,UAAU,QAAb,oBAEA,wBAAOA,UAAU,uDAAjB,UACE,gCACE,qBAAIA,UAAU,4BAAd,UACE,mCACA,uCACA,wCAIJ,gCACGN,EAAMO,KAAI,SAAAC,GAAI,OACb,qBAAkB,UAAQ,OAA1B,UACE,oBAAI,UAAQ,SAAZ,SAAsBA,EAAKC,KAE3B,oBAAI,UAAQ,YAAZ,SACGD,EAAKE,QAGR,oBAAIJ,UAAU,8BAAd,UACe,OAAZJ,QAAY,IAAZA,OAAA,EAAAA,EAAcO,MAAOD,EAAKC,GACzB,wBACEE,KAAK,SACL,UAAQ,aACRL,UAAU,0BACVM,QAAS,kBAvCH,SAACJ,GACvBP,GAAe,GACfE,EAAgBK,GAChBJ,EAAaI,GAoCkBK,CAAgBL,IAJjC,kBASA,wBACEG,KAAK,SACL,UAAQ,aACRL,UAAU,iBACVM,QAASP,EAJX,uBAlBGG,EAAKC,gB,QCzCbK,G,MAAS,kBACpB,qBAAKR,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wB,cCGNS,EAAkC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChD,EAA4BC,mBAAS,CACnCC,KAAM,GACNC,MAAO,GACPC,KAAM,KAHR,mBAAOC,EAAP,KAAeC,EAAf,KAMA,EAAwCL,mBAAS,CAC/CC,MAAM,EACNC,OAAO,EACPC,MAAM,IAHR,mBAAOG,EAAP,KAAqBC,EAArB,KAMA,EAAgDP,oBAAS,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KAEMC,EAAqB,SACzBC,GAEAN,EAAU,2BACLD,GADI,kBAENO,EAAMC,OAAOX,KAAOU,EAAMC,OAAOC,SAGpCN,EAAgB,2BACXD,GADU,kBAEZK,EAAMC,OAAOX,MAAO,MAInBa,EAAc,SAAoBC,EAAkBC,GACnDD,EAAcC,KACjBT,GAAgB,SAAAU,GAAU,kCAAUA,GAAV,kBAAuBD,GAAM,OACvDX,GAAU,SAAAa,GAAU,kCAAUA,GAAV,kBAAuBF,EAAMD,EAAcC,UAqCnE,OACE,uBAAM,UAAQ,iBAAiBG,SAAU,SAAAC,GAAC,OAlCzB,SAACT,GAClBA,EAAMU,iBAEN,IAAMN,EAAgB,CACpBd,KAAMG,EAAOH,KAAKqB,OAClBpB,MAAOE,EAAOF,MAAMoB,OACpBnB,KAAMC,EAAOD,KAAKmB,QAGpBR,EAAYC,EAAe,QAC3BD,EAAYC,EAAe,SAC3BD,EAAYC,EAAe,QAEtBA,EAAcd,MAASc,EAAcb,OAAUa,EAAcZ,OAIlEM,GAAoB,GAEpBV,EAAMgB,GACHQ,MAAK,kBAAMlB,EAAU,2BAAKU,GAAN,IAAqBZ,KAAM,SAC/CqB,SAAQ,kBAAMf,GAAoB,OAaSgB,CAAWL,IAAzD,UACE,sBAAK/B,UAAU,QAAQ,UAAQ,YAA/B,UACE,uBAAOA,UAAU,QAAQqC,QAAQ,sBAAjC,yBAIA,sBAAKrC,UAAU,yCAAf,UACE,uBACEK,KAAK,OACLO,KAAK,OACLT,GAAG,sBACHmC,YAAY,eACZtC,UAAWuC,IAAW,QAAS,CAC7B,YAAatB,EAAaL,OAE5BY,MAAOT,EAAOH,KACd4B,SAAUnB,IAGZ,sBAAMrB,UAAU,wBAAhB,SACE,mBAAGA,UAAU,kBAGdiB,EAAaL,MACZ,sBACEZ,UAAU,yCACV,UAAQ,YAFV,SAIE,mBAAGA,UAAU,qCAKlBiB,EAAaL,MACZ,mBAAGZ,UAAU,iBAAiB,UAAQ,eAAtC,iCAMJ,sBAAKA,UAAU,QAAQ,UAAQ,aAA/B,UACE,uBAAOA,UAAU,QAAQqC,QAAQ,uBAAjC,0BAIA,sBAAKrC,UAAU,yCAAf,UACE,uBACEK,KAAK,OACLO,KAAK,QACLT,GAAG,uBACHmC,YAAY,iBACZtC,UAAWuC,IAAW,QAAS,CAC7B,YAAatB,EAAaJ,QAE5BW,MAAOT,EAAOF,MACd2B,SAAUnB,IAGZ,sBAAMrB,UAAU,wBAAhB,SACE,mBAAGA,UAAU,sBAGdiB,EAAaJ,OACZ,sBACEb,UAAU,yCACV,UAAQ,YAFV,SAIE,mBAAGA,UAAU,qCAKlBiB,EAAaJ,OACZ,mBAAGb,UAAU,iBAAiB,UAAQ,eAAtC,kCAMJ,sBAAKA,UAAU,QAAQ,UAAQ,YAA/B,UACE,uBAAOA,UAAU,QAAQqC,QAAQ,eAAjC,0BAIA,qBAAKrC,UAAU,UAAf,SACE,0BACEG,GAAG,eACHS,KAAK,OACL0B,YAAY,oBACZtC,UAAWuC,IAAW,WAAY,CAChC,YAAatB,EAAaH,OAE5BU,MAAOT,EAAOD,KACd0B,SAAUnB,MAIbJ,EAAaH,MACZ,mBAAGd,UAAU,iBAAiB,UAAQ,eAAtC,gCAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEK,KAAK,SACLL,UAAWuC,IAAW,SAAU,UAAW,CACzC,aAAcpB,IAHlB,mBAUF,qBAAKnB,UAAU,UAAf,SAEE,wBACEK,KAAK,QACLL,UAAU,0BACVM,QAnIQ,WAChBU,EAAU,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,KAAM,KACvCI,EAAgB,CACdN,MAAM,EACNC,OAAO,EACPC,MAAM,KA2HF,4BCnMJ2B,EAAW,oCAGjB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,MAOxB,SAASI,EACPC,GAGa,IAFbC,EAEY,uDAFY,MACxBC,EACY,uDADA,KAENC,EAAuB,CAAEF,UAW/B,OATIC,IAEFC,EAAQrC,KAAOsC,KAAKC,UAAUH,GAC9BC,EAAQG,QAAU,CAChB,eAAgB,oCAKbZ,EAAK,KACTR,MAAK,kBAAMqB,MAAMd,EAAWO,EAAKG,MACjCjB,MAAK,SAAAsB,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAGZ,OAAOF,EAASG,UAIf,IAAMC,EACN,SAAIZ,GAAJ,OAAoBD,EAAWC,IADzBY,EAEL,SAAIZ,EAAaE,GAAjB,OAA+BH,EAAWC,EAAK,OAAQE,IAFlDU,EAIH,SAACZ,GAAD,OAAiBD,EAAQC,EAAK,WCxB3Ba,EAA+B,SAAC,GAOtC,IANLjE,EAMI,EANJA,aACAkE,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,wBACAC,EACI,EADJA,2BAEA,EAAgCvD,oBAAS,GAAzC,mBAAOwD,EAAP,KAAiBC,EAAjB,KAWMC,EAAgB,SAAClE,GCjBa,IAACmE,EDkBnCJ,GAA2B,IClBQI,EDoBZnE,ECnBlByD,EAAA,oBAA2BU,KDoB7BpC,MAAK,WACA4B,GACFC,EAAYD,EAASS,QAAO,SAAAC,GAC1B,OAAOA,EAAQrE,KAAOA,SAI3BsE,OAAM,kBAAMP,GAA2B,OAG5C,OACE,qBAAKlE,UAAU,UAAU,UAAQ,cAAjC,SACE,sBAAKA,UAAU,UAAU,UAAQ,cAAjC,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAI,UAAQ,YAAZ,oBACOJ,EAAaO,GADpB,aAC2BP,EAAaQ,SAGxC,mBAAG,UAAQ,WAAX,SACGR,EAAakB,UAIlB,sBAAKd,UAAU,QAAf,UACGgE,GAAsB,cAAC,EAAD,IAEtBC,GACC,qBAAKjE,UAAU,yBAAyB,UAAQ,gBAAhD,mCAKAgE,IAAuBC,GACA,IAApBH,EAASY,QACZ,mBAAG1E,UAAU,aAAa,UAAQ,oBAAlC,8BAKAgE,IAAuBC,GACA,IAApBH,EAASY,QACZ,qCACE,mBAAG1E,UAAU,aAAb,uBADF,OAGG8D,QAHH,IAGGA,OAHH,EAGGA,EAAU7D,KAAI,SAAAuE,GAAO,OACpB,0BAEExE,UAAU,mBACV,UAAQ,UAHV,UAKE,sBAAKA,UAAU,iBAAf,UACE,mBAAG2E,KAAI,iBAAYH,EAAQ3D,OAAS,UAAQ,gBAA5C,SACG2D,EAAQ5D,OAEX,wBACE,UAAQ,gBACRP,KAAK,SACLL,UAAU,kBACV,aAAW,SACXM,QAAS,kBAAM+D,EAAcG,EAAQrE,KALvC,8BAWF,qBAAKH,UAAU,eAAe,UAAQ,cAAtC,SACGwE,EAAQ1D,SApBN0D,EAAQrE,WA2BnB6D,IAAuBG,GACvB,wBACE,UAAQ,qBACR9D,KAAK,SACLL,UAAU,iBACVM,QAAS,kBAAM8D,GAAY,IAJ7B,gCAWHD,GACC,cAAC,EAAD,CACEzD,MApGS,SAACwC,GAClB,OCbgC,SAACA,EAAWoB,GAC9C,OAAOV,EAAqB,YAArB,2BAAuCV,GAAvC,IAA6CoB,YDY3CM,CAAqB1B,EAAMtD,EAAaO,IAC5C+B,MAAK,SAAA2C,GAAM,OAAId,EAAY,GAAD,mBAAKD,GAAL,CAAee,QACzCJ,OAAM,WAEL,MADAP,GAA2B,GACrB,IAAIR,kBErBLoB,EAAgC,SAAC,GAOvC,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,cACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,UAaA,OACE,sBACE,UAAQ,eACRpF,UAAWuC,IACT,WACA,CACE,YAAawC,IALnB,UASE,qBAAK/E,UAAU,mBAAf,SACE,yBACEK,KAAK,SACLL,UAAU,SACV,gBAAc,OACd,gBAAc,gBACdM,QA3BkB,SAACgB,GACzBA,EAAM+D,kBACNL,GAAeD,IAoBX,UAOE,+BAAOG,EAAeA,EAAatE,KAAO,kBAE1C,sBAAMZ,UAAU,gBAAhB,SACE,mBAAGA,UAAU,oBAAoB,cAAY,gBAKnD,qBAAKA,UAAU,gBAAgBG,GAAG,gBAAgBmF,KAAK,OAAvD,SACE,qBAAKtF,UAAU,mBAAf,SACGiF,EAAMhF,KAAI,SAAAsF,GAAI,OACb,mBAEEZ,KAAI,gBAAWY,EAAKpF,IACpBH,UAAWuC,IACT,gBACA,CACE,aAAyB,OAAZ2C,QAAY,IAAZA,OAAA,EAAAA,EAAc/E,MAAOoF,EAAKpF,KAG3CG,QAAS,kBA5CG,SAACiF,GACvBJ,EAAgBI,GAChBP,GAAc,GACdI,EAAUG,GAyCeC,CAAgBD,IATjC,SAWGA,EAAK3E,MAVD2E,EAAKpF,eC/CXsF,EAAgB,WAC3B,MAA0B9E,mBAAiB,IAA3C,mBAAOsE,EAAP,KAAcS,EAAd,KACA,EAA0B/E,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAciG,EAAd,KACA,EAAgChF,mBAAoB,IAApD,mBAAOmD,EAAP,KAAiBC,EAAjB,KACA,EAAwCpD,mBAAsB,MAA9D,mBAAOuE,EAAP,KAAqBC,EAArB,KACA,EAAoCxE,oBAAS,GAA7C,mBAAOoE,EAAP,KAAmBC,EAAnB,KACA,EAA8CrE,oBAAS,GAAvD,mBAAOiF,EAAP,KAAwBC,EAAxB,KACA,EAAwDlF,oBAAS,GAAjE,mBAAOmF,EAAP,KAA6BC,EAA7B,KACA,EAA0CpF,oBAAS,GAAnD,mBAAOqF,EAAP,KAAsBC,EAAtB,KACA,EAAwCtF,mBAAsB,MAA9D,mBAAOf,EAAP,KAAqBC,EAArB,KACA,EAAoDc,oBAAS,GAA7D,mBAAOqD,EAAP,KAA2BkC,EAA3B,KACA,EAA8DvF,oBAAS,GAAvE,mBAAOsD,EAAP,KAAgCC,EAAhC,KAEMiC,EAAgBjB,IAChBU,IACAE,EAENM,qBAAU,WF1BHxC,EAAmB,UE2Bb1B,KAAKwD,GAEhBW,SAASC,iBAAiB,SAAS,kBAAMtB,GAAc,QACtD,IAwBH,OACE,sBAAMhF,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACE+E,WAAYA,EACZC,cAAeA,EACfC,MAAOA,EACPC,aAAcA,EACdC,gBAAiBA,EACjBC,UAnCE,SAACG,GF7BG,IAACgB,EE8BrB1G,EAAgB,MAChBoG,GAAiB,GACjBF,GAAwB,GACxBF,GAAmB,IFjCEU,EEmCZhB,EAAKpF,GFlCTyD,EAAA,wBAAoC2C,KEmCtCrE,KAAKyD,GACLlB,OAAM,kBAAMsB,GAAwB,MACpC5D,SAAQ,kBAAM0D,GAAmB,WA8B1B,sBAAK7F,UAAU,QAAQ,UAAQ,cAA/B,UACE,mBAAG,UAAQ,iBAAX,UACIkF,GAAgB,qBAGnBU,GAAmB,cAAC,EAAD,IAEnBE,GACC,qBACE9F,UAAU,yBACV,UAAQ,oBAFV,mCAQDmG,GAAkC,IAAjBzG,EAAMgF,QACtB,qBACE1E,UAAU,0BACV,UAAQ,aAFV,0BAQDmG,GAAkC,IAAjBzG,EAAMgF,QACtB,cAAC,EAAD,CACEhF,MAAOA,EACPC,eAAgBsG,EAChBrG,aAAcA,EACdC,gBAAiBA,EACjBC,aA1DG,SAACI,GFrCG,IAACoE,EEsCxBJ,GAA2B,GAC3BgC,GAAsB,IFvCE5B,EEyCZpE,EAAKC,GFxCZyD,EAAA,2BAA0CU,KEyC5CpC,KAAK6B,GACLU,OAAM,kBAAMP,GAA2B,MACvC/B,SAAQ,kBAAM+D,GAAsB,iBA0DjC,qBACE,UAAQ,UACRlG,UAAWuC,IACT,OACA,YACA,eACA,UACA,CACE,gBAAiByD,IARvB,SAYE,qBAAKhG,UAAU,gCAAf,SACGJ,GACC,cAAC,EAAD,CAEEA,aAAcA,EACdkE,SAAUA,EACVE,mBAAoBA,EACpBC,wBAAyBA,EACzBC,2BAA4BA,EAC5BH,YAAaA,GANRnE,EAAaO,gBC9HpCqG,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.5c9dd2e1.chunk.js","sourcesContent":["import { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[],\n  setOpenSidebar: (value: boolean) => void,\n  selectedPost: Post | null,\n  setSelectedPost: (value: Post | null) => void,\n  loadComments: (post: Post) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  setOpenSidebar,\n  selectedPost,\n  setSelectedPost,\n  loadComments,\n}) => {\n  const handleOpenClick = (post: Post) => {\n    setOpenSidebar(true);\n    setSelectedPost(post);\n    loadComments(post);\n  };\n\n  const handleCloseClick = () => {\n    setOpenSidebar(false);\n    setSelectedPost(null);\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr key={post.id} data-cy=\"Post\">\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                {selectedPost?.id !== post.id ? (\n                  <button\n                    type=\"button\"\n                    data-cy=\"PostButton\"\n                    className=\"button is-link is-light\"\n                    onClick={() => handleOpenClick(post)}\n                  >\n                    Open\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    data-cy=\"PostButton\"\n                    className=\"button is-link\"\n                    onClick={handleCloseClick}\n                  >\n                    Close\n                  </button>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  onAdd: (data: any) => Promise<void>,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ onAdd }) => {\n  const [fields, setFields] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const [fieldsErrors, setFieldsErrors] = useState({\n    name: false,\n    email: false,\n    body: false,\n  });\n\n  const [isCommentPosting, setIsCommentPosting] = useState(false);\n\n  const handleFieldsChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.value,\n    });\n\n    setFieldsErrors({\n      ...fieldsErrors,\n      [event.target.name]: false,\n    });\n  };\n\n  const checkFields = <T extends unknown>(trimmedFields: T, key: keyof T) => {\n    if (!trimmedFields[key]) {\n      setFieldsErrors(prevErrors => ({ ...prevErrors, [key]: true }));\n      setFields(prevFields => ({ ...prevFields, [key]: trimmedFields[key] }));\n    }\n  };\n\n  const addComment = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedFields = {\n      name: fields.name.trim(),\n      email: fields.email.trim(),\n      body: fields.body.trim(),\n    };\n\n    checkFields(trimmedFields, 'name');\n    checkFields(trimmedFields, 'email');\n    checkFields(trimmedFields, 'body');\n\n    if (!trimmedFields.name || !trimmedFields.email || !trimmedFields.body) {\n      return;\n    }\n\n    setIsCommentPosting(true);\n\n    onAdd(trimmedFields)\n      .then(() => setFields({ ...trimmedFields, body: '' }))\n      .finally(() => setIsCommentPosting(false));\n  };\n\n  const clearForm = () => {\n    setFields({ name: '', email: '', body: '' });\n    setFieldsErrors({\n      name: false,\n      email: false,\n      body: false,\n    });\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={e => addComment(e)}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', {\n              'is-danger': fieldsErrors.name,\n            })}\n            value={fields.name}\n            onChange={handleFieldsChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {fieldsErrors.name && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {fieldsErrors.name && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', {\n              'is-danger': fieldsErrors.email,\n            })}\n            value={fields.email}\n            onChange={handleFieldsChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {fieldsErrors.email && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {fieldsErrors.email && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', {\n              'is-danger': fieldsErrors.body,\n            })}\n            value={fields.body}\n            onChange={handleFieldsChange}\n          />\n        </div>\n\n        {fieldsErrors.body && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button', 'is-link', {\n              'is-loading': isCommentPosting,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={clearForm}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport {\n  addingCommentRequest,\n  deletingCommentRequest,\n} from '../utils/apiRequests';\n\ntype Props = {\n  selectedPost: Post,\n  comments: Comment[],\n  setComments: (posts: Comment[]) => void,\n  areCommentsLoading: boolean,\n  hasCommentsLoadingError: boolean,\n  setHasCommentsLoadingError: (value: boolean) => void,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPost,\n  comments,\n  setComments,\n  areCommentsLoading,\n  hasCommentsLoadingError,\n  setHasCommentsLoadingError,\n}) => {\n  const [showForm, setShowForm] = useState(false);\n\n  const addComment = (data: any) => {\n    return addingCommentRequest(data, selectedPost.id)\n      .then(result => setComments([...comments, result]))\n      .catch(() => {\n        setHasCommentsLoadingError(true);\n        throw new Error();\n      });\n  };\n\n  const deleteComment = (id: number) => {\n    setHasCommentsLoadingError(false);\n\n    deletingCommentRequest(id)\n      .then(() => {\n        if (comments) {\n          setComments(comments.filter(comment => {\n            return comment.id !== id;\n          }));\n        }\n      })\n      .catch(() => setHasCommentsLoadingError(true));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${selectedPost.id}: ${selectedPost.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {selectedPost.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {areCommentsLoading && <Loader />}\n\n          {hasCommentsLoadingError && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {!areCommentsLoading && !hasCommentsLoadingError\n            && comments.length === 0 && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {!areCommentsLoading && !hasCommentsLoadingError\n            && comments.length !== 0 && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments?.map(comment => (\n                <article\n                  key={comment.id}\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                >\n                  <div className=\"message-header\">\n                    <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n                      {comment.name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!areCommentsLoading && !showForm && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setShowForm(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {showForm && (\n          <NewCommentForm\n            onAdd={addComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { client } from './fetchClient';\nimport { User } from '../types/User';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n\nexport const getComments = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const addingCommentRequest = (data: any, postId: number) => {\n  return client.post<Comment>('/comments', { ...data, postId });\n};\n\nexport const deletingCommentRequest = (postId: number) => {\n  return client.delete(`/comments/${postId}`);\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  isListOpen: boolean,\n  setIsListOpen: (value: boolean) => void,\n  users: User[],\n  selectedUser: User | null,\n  setSelectedUser: (user: User) => void,\n  loadPosts: (user: User) => void,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  isListOpen,\n  setIsListOpen,\n  users,\n  selectedUser,\n  setSelectedUser,\n  loadPosts,\n}) => {\n  const handleListOpening = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    setIsListOpen(!isListOpen);\n  };\n\n  const handleItemClick = (user: User) => {\n    setSelectedUser(user);\n    setIsListOpen(false);\n    loadPosts(user);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames(\n        'dropdown',\n        {\n          'is-active': isListOpen,\n        },\n      )}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleListOpening}\n        >\n          <span>{selectedUser ? selectedUser.name : 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map(user => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={classNames(\n                'dropdown-item',\n                {\n                  'is-active': selectedUser?.id === user.id,\n                },\n              )}\n              onClick={() => handleItemClick(user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { Comment } from './types/Comment';\nimport { getUsers, getPosts, getComments } from './utils/apiRequests';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isListOpen, setIsListOpen] = useState(false);\n  const [arePostsLoading, setArePostsLoading] = useState(false);\n  const [hasPostsLoadingError, setHasPostsLoadingError] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [areCommentsLoading, setAreCommentsLoading] = useState(false);\n  const [hasCommentsLoadingError, setHasCommentsLoadingError] = useState(false);\n\n  const arePostsShown = selectedUser\n    && !arePostsLoading\n    && !hasPostsLoadingError;\n\n  useEffect(() => {\n    getUsers().then(setUsers);\n\n    document.addEventListener('click', () => setIsListOpen(false));\n  }, []);\n\n  const loadPosts = (user: User) => {\n    setSelectedPost(null);\n    setIsSidebarOpen(false);\n    setHasPostsLoadingError(false);\n    setArePostsLoading(true);\n\n    getPosts(user.id)\n      .then(setPosts)\n      .catch(() => setHasPostsLoadingError(true))\n      .finally(() => setArePostsLoading(false));\n  };\n\n  const loadComments = (post: Post) => {\n    setHasCommentsLoadingError(false);\n    setAreCommentsLoading(true);\n\n    getComments(post.id)\n      .then(setComments)\n      .catch(() => setHasCommentsLoadingError(true))\n      .finally(() => setAreCommentsLoading(false));\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  isListOpen={isListOpen}\n                  setIsListOpen={setIsListOpen}\n                  users={users}\n                  selectedUser={selectedUser}\n                  setSelectedUser={setSelectedUser}\n                  loadPosts={loadPosts}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                <p data-cy=\"NoSelectedUser\">\n                  {!selectedUser && 'No user selected'}\n                </p>\n\n                {arePostsLoading && <Loader />}\n\n                {hasPostsLoadingError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {arePostsShown && posts.length === 0 && (\n                  <div\n                    className=\"notification is-warning\"\n                    data-cy=\"NoPostsYet\"\n                  >\n                    No posts yet\n                  </div>\n                )}\n\n                {arePostsShown && posts.length !== 0 && (\n                  <PostsList\n                    posts={posts}\n                    setOpenSidebar={setIsSidebarOpen}\n                    selectedPost={selectedPost}\n                    setSelectedPost={setSelectedPost}\n                    loadComments={loadComments}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              {\n                'Sidebar--open': isSidebarOpen,\n              },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {selectedPost && (\n                <PostDetails\n                  key={selectedPost.id}\n                  selectedPost={selectedPost}\n                  comments={comments}\n                  areCommentsLoading={areCommentsLoading}\n                  hasCommentsLoadingError={hasCommentsLoadingError}\n                  setHasCommentsLoadingError={setHasCommentsLoadingError}\n                  setComments={setComments}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}